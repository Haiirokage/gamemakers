<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grounded = false;
col_target = undefined;
movespeed = 10;
jumpforce = 7;
aircontrol = 0.3;

cd = 100;
hp = 100;
armor = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if cd &lt; 100{
    cd++;
    draw_rectangle(100, 100, 200, 200, true);
}
if hp &lt;= 0 {
    show_message("Game over!");
}
if phy_speed_y &gt; 0 {
    grounded = false;
}
//moving
if keyboard_check(ord('A')) {
    if(grounded){
        physics_apply_force(x, y, -1*movespeed, -1);
    }
    else{
        physics_apply_force(x, y, -1 * aircontrol*movespeed, -1);
    }
}
if keyboard_check(ord('D')) {
    if(grounded){
        physics_apply_force(x, y, movespeed, -1);
    }
    else{
        physics_apply_force(x, y, aircontrol*movespeed, -1);
    }
}
//Jumping
if keyboard_check(ord('W')) {
    if(grounded){
        grounded = false;
        physics_apply_impulse(x, y, 0, -1 * jumpforce);
    }
}
if mouse_check_button_pressed(mb_left){
    wall = collision_point(mouse_x, mouse_y, obj_wall, false, true)
    if wall &amp;&amp; cd &gt;= 40{
        cd -= 40;
        grounded = false;
        var dir = point_direction(wall.x, wall.y, x, y);
        physics_apply_impulse(x, y, lengthdir_x(10, dir), lengthdir_y(10, dir));
    }
}
if mouse_check_button_pressed(mb_right){
    wall = collision_point(mouse_x, mouse_y, obj_wall, false, true)
    if wall &amp;&amp; cd &gt;= 40{
        cd -= 40;
        grounded = false;
        var dir = point_direction(wall.x, wall.y, x, y);
        physics_apply_impulse(x, y, lengthdir_x(-10, dir), lengthdir_y(-10, dir));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_dynamic">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision Detect</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phy_speed_y &gt;= 0){
    grounded = true;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Collision Detect</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(phy_speed_y &gt;= 0){
    grounded = true;
}
if phy_speed &gt; armor {
    hp = hp - phy_speed + armor;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>2</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.200000002980232</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>99999</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>30,0</point>
    <point>30,58</point>
    <point>24,60</point>
    <point>6,60</point>
    <point>0,58</point>
  </PhysicsShapePoints>
</object>
